# DROP TABLES

songplay_table_drop = "DROP TABLE IF EXISTS SONG_PLAY_TBL;"
songplay_temp_table_drop = "DROP TABLE IF EXISTS TEMP_SONG_PLAY_TBL;"
user_table_drop = "DROP TABLE IF EXISTS USER_TBL;"
song_table_drop = "DROP TABLE IF EXISTS SONG_TBL;"
artist_table_drop = "DROP TABLE IF EXISTS ARTIST_TBL;"
time_table_drop = "DROP TABLE IF EXISTS TIME_TBL;"

# CREATE TABLES

songplay_table_create = ("""
CREATE TABLE IF NOT EXISTS SONG_PLAY_TBL
(
    UNIX_TS BIGINT,
    SESSION_ID BIGINT,
    ARTIST_ID VARCHAR(50),
    SONG_ID VARCHAR(50),
    USER_ID INT DEFAULT -9999,
    LEVEL VARCHAR(25),
    USER_LOCATION VARCHAR(100),
    USER_AGENT VARCHAR(250),
    USER_LOGGED VARCHAR(25),
    CREATION_TIMESTAMP TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT PK_SONG_PLAY_TBL PRIMARY KEY (UNIX_TS,SESSION_ID)
);
""")

songplay_temp_table_create = ("""
CREATE TABLE IF NOT EXISTS TEMP_SONG_PLAY_TBL
(
    UNIX_TS BIGINT,
    SESSION_ID BIGINT,
    ARTIST_NAME VARCHAR(150),
    SONG_TITLE VARCHAR(250),
    USER_ID INT,
    LEVEL VARCHAR(25),
    USER_LOCATION VARCHAR(100),
    USER_AGENT VARCHAR(250),
    USER_LOGGED VARCHAR(25),
    SONG_LENGTH FLOAT DEFAULT -9999
);
""")

user_table_create = ("""
CREATE TABLE IF NOT EXISTS USER_TBL
(
    USER_ID INT CONSTRAINT PK_USER_TBL PRIMARY KEY
    ,FIRST_NAME VARCHAR(100)
    ,LAST_NAME VARCHAR(100)
    ,GENDER CHAR(1)
    ,LEVEL VARCHAR(50)
);
""")

song_table_create = ("""
CREATE TABLE IF NOT EXISTS SONG_TBL
(
    SONG_ID VARCHAR(50)
    ,TITLE VARCHAR(250)
    ,ARTIST_ID VARCHAR(50)
    ,YEAR_COL INT DEFAULT -9999
    ,DURATION FLOAT DEFAULT -9999
    ,CONSTRAINT PK_SONG_TBL PRIMARY KEY (SONG_ID,ARTIST_ID,DURATION)
);
""")

artist_table_create = ("""
CREATE TABLE IF NOT EXISTS ARTIST_TBL
(
    ARTIST_ID VARCHAR(50)
    ,NAME VARCHAR(150)
    ,LOCATION VARCHAR(50)
    ,LATITUDE INT DEFAULT -9999
    ,LONGITUDE INT DEFAULT -9999
    ,CONSTRAINT PK_ARTIST_TBL PRIMARY KEY (ARTIST_ID)
);
""")

time_table_create = ("""
CREATE TABLE IF NOT EXISTS TIME_TBL
(
    TIME_ID BIGINT
    ,TS_FORMATTED TIMESTAMP
    ,YEAR_COL INT
    ,MONTH_COL INT
    ,DAY_COL INT
    ,HOUR_COL INT
    ,WEEK_DAY INT
    ,DAY_NAME VARCHAR(50)
    ,CONSTRAINT PK_TIME_TBL PRIMARY KEY (TIME_ID)
);
""")

# INSERT RECORDS

songplay_table_insert = ("""
    INSERT INTO SONG_PLAY_TBL(UNIX_TS,SESSION_ID,ARTIST_ID,SONG_ID,USER_ID,LEVEL,USER_LOCATION,USER_AGENT,USER_LOGGED)
    SELECT 
    DISTINCT_TEMP_DATA.UNIX_TS
    ,DISTINCT_TEMP_DATA.SESSION_ID
    ,ARTIST_TBL.ARTIST_ID
    ,SONG_TBL.SONG_ID
    ,DISTINCT_TEMP_DATA.USER_ID
    ,DISTINCT_TEMP_DATA.LEVEL
    ,DISTINCT_TEMP_DATA.USER_LOCATION
    ,DISTINCT_TEMP_DATA.USER_AGENT
    ,DISTINCT_TEMP_DATA.USER_LOGGED
    FROM 
    (
        SELECT DISTINCT unix_ts,session_id,artist_name,song_title,user_id,level,USER_LOCATION,user_agent,user_logged,SONG_LENGTH FROM TEMP_SONG_PLAY_TBL
    ) AS DISTINCT_TEMP_DATA
    LEFT OUTER JOIN SONG_TBL
    ON DISTINCT_TEMP_DATA.song_title = SONG_TBL.TITLE
    AND DISTINCT_TEMP_DATA.SONG_LENGTH = SONG_TBL.DURATION
    LEFT JOIN ARTIST_TBL
    ON DISTINCT_TEMP_DATA.artist_name = ARTIST_TBL.NAME
    ON CONFLICT (UNIX_TS,SESSION_ID) DO 
    UPDATE SET
    ARTIST_ID = EXCLUDED.ARTIST_ID
    ,SONG_ID = EXCLUDED.SONG_ID
    ,USER_ID = EXCLUDED.USER_ID
    ,LEVEL = EXCLUDED.LEVEL
    ,USER_LOCATION = EXCLUDED.USER_LOCATION
    ,USER_AGENT = EXCLUDED.USER_AGENT
    ,USER_LOGGED = EXCLUDED.USER_LOGGED;
""")

songplay_temp_table_insert = ("""
    INSERT INTO temp_song_play_tbl(
    UNIX_TS, SESSION_ID, ARTIST_NAME, SONG_TITLE, USER_ID, LEVEL, USER_LOCATION, USER_AGENT, USER_LOGGED,SONG_LENGTH)
    VALUES (%s,%s,%s,%s,%s,%s,%s,%s,%s,%s);
""")

user_table_insert = ("""
    INSERT INTO public.user_tbl(user_id, first_name, last_name, gender, level)
    VALUES (%s,%s,%s,%s,%s)
    ON CONFLICT (user_id) DO
    UPDATE SET
    first_name = EXCLUDED.first_name
    ,last_name = EXCLUDED.last_name
    ,gender = EXCLUDED.gender
    ,level = EXCLUDED.level;
""")

song_table_insert = ("""
    INSERT INTO SONG_TBL(SONG_ID,TITLE,ARTIST_ID,YEAR_COL,DURATION)
    VALUES(%s,%s,%s,%s,%s) ON CONFLICT (SONG_ID,ARTIST_ID,DURATION) DO UPDATE
    SET TITLE = EXCLUDED.TITLE
    ,YEAR_COL = EXCLUDED.YEAR_COL;
""")

artist_table_insert = ("""
    INSERT INTO ARTIST_TBL(ARTIST_ID,NAME,LOCATION,LATITUDE,LONGITUDE)
    VALUES(%s,%s,%s,%s,%s) ON CONFLICT (ARTIST_ID) DO UPDATE
    SET NAME = EXCLUDED.NAME
    ,LOCATION = EXCLUDED.LOCATION
    ,LATITUDE = EXCLUDED.LATITUDE
    ,LONGITUDE = EXCLUDED.LONGITUDE;
""")


time_table_insert = ("""
    INSERT INTO TIME_TBL
    (TIME_ID, TS_FORMATTED, YEAR_COL, MONTH_COL, DAY_COL,
     HOUR_COL,WEEK_DAY, DAY_NAME
    )
    VALUES
    (%s,%s,%s,%s,%s,%s,%s,%s)
    ON CONFLICT (TIME_ID) DO NOTHING;
""")



# QUERY LISTS

create_table_queries = [songplay_table_create, user_table_create, song_table_create, artist_table_create, time_table_create,songplay_temp_table_create]
drop_table_queries = [songplay_table_drop, user_table_drop, song_table_drop, artist_table_drop, time_table_drop,songplay_temp_table_drop]